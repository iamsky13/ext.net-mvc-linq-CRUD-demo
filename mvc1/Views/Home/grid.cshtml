
@{
    Layout = null;
    var X = Html.X();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>grid</title>
    @(Html.X().ResourceManager())
</head>
<body>
    <div> 
        
        @{
        <style>
            .x-grid-row-over .x-grid-cell-inner {
                font-weight: bold;
            }
        </style>

        <script>
            var template = '<span style="color:{0};">{1}</span>';

            var change = function (value) {
                return Ext.String.format(template, (value > 0) ? "green" : "red", value);
            };

            var pctChange = function (value) {
                return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
            };
        </script>
        }

        @{
            <h1>Simple Array Grid</h1>

            @(Html.X().GridPanel()
                .Title("Array Grid")
                .Width(600)
                .Height(350)
                .Store(Html.X().Store()
                    .Model(Html.X().Model()
                        .Fields(
                            new ModelField("company"),
                            new ModelField("price", ModelFieldType.Float),
                            new ModelField("change", ModelFieldType.Float),
                            new ModelField("pctChange", ModelFieldType.Float),
                            new ModelField("lastChange", ModelFieldType.Date, "M/d hh:mmtt")
                        )
                    )
                    .DataSource(Model)
                )
                .ColumnModel(
                    Html.X().Column().Text("Company").DataIndex("company").Flex(1),
                    Html.X().Column().Text("Price").DataIndex("price").Renderer(RendererFormat.UsMoney),
                    Html.X().Column().Text("Change").DataIndex("change").Renderer("change"),
                    Html.X().Column().Text("Change").DataIndex("pctChange").Renderer("pctChange"),
                    Html.X().DateColumn().Text("Last Updated").DataIndex("lastChange")
                )
            )





        @(Html.BeginForm("submitdata", "Home", FormMethod.Post))
        {
            @(Html.X().ComboBox()
            .ID("ComboBoxCountry")
            .Editable(false)
            .QueryMode(DataLoadMode.Local)
            .TriggerAction(TriggerAction.All)
            .EmptyText("Select a country")

            .Items(
                new ListItem("Belgium", "BE"),
                new ListItem("Brazil", "BR"),
                new ListItem("Bulgaria", "BG"),
                new ListItem("Canada", "CA"),
                new ListItem("Chile", "CL"),
                new ListItem("Cyprus", "CY"),
                new ListItem("Finland", "FI"),
                new ListItem("France", "FR"),
                new ListItem("Germany", "DE"),
                new ListItem("Hungary", "HU"),
                new ListItem("Ireland", "IE"),
                new ListItem("Israel", "IL"),
                new ListItem("Italy", "IT"),
                new ListItem("Lithuania", "LT"),
                new ListItem("Mexico", "MX"),
                new ListItem("Netherlands", "NL"),
                new ListItem("New Zealand", "NZ"),
                new ListItem("Norway", "NO"),
                new ListItem("Pakistan", "PK"),
                new ListItem("Poland", "PL"),
                new ListItem("Romania", "RO"),
                new ListItem("Slovakia", "SK"),
                new ListItem("Slovenia", "SI"),
                new ListItem("Spain", "ES"),
                new ListItem("Sweden", "SE"),
                new ListItem("Switzerland", "CH"),
                new ListItem("United Kingdom", "GB")
            )
            )

            @(Html.X().ComboBox()
                    .ID("ComboBoxCity")
                    .TypeAhead(true)
                    .QueryMode(DataLoadMode.Local)
                    .ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                    .DisplayField("Name")
                    .ValueField("CategoryID")
                    .EmptyText("Select Category")

                    .Store(Html.X().Store()
                        .AutoLoad(true)
                        .Model(Html.X().Model()
                            .IDProperty("Id")
                            .Fields(
                                new ModelField("CategoryID") { Mapping = "Id" },
                                new ModelField("Name", ModelFieldType.String) { Mapping = "Name" }
                            )
                        )
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("GetCities"))
                            .Reader(Html.X().JsonReader().RootProperty("data"))
                        )
                        .Parameters(ps =>
                                ps.Add(new StoreParameter("country", "App.ComboBoxCountry.getValue()", ParameterMode.Raw))
                            )
                            .Listeners(ls =>
                                ls.Load.Handler = @"var combo = App.ComboBoxCity;
                                                    combo.setValue(records[0].get(combo.valueField));"
                            )

                        

                    )

            )
        }
            <input type="submit" value="submit"/>
            }

    </div>
</body>
</html>
